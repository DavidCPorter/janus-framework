#!/bin/bash
source $OYSTER_HOME/utils/sapautils.sh
#echo $OYSTER_HOME

elementIn () {
  local e match="$1"
  shift
  for e; do [[ "$e" == "$match" ]] && return 0; done
  return 1
}

createModule(){
  if [ "$#" -ne 2 ]; then
    # shellcheck disable=SC1065
    printf "\n > oyster create requires 2 parameters: stage, module_name \n"
  fi

  MOD_LOC=$OYSTER_HOME/r_modules/$1/$2
  mkdir $MOD_LOC
  cd $MOD_LOC;mkdir plays defaults tests files templates
  touch defaults/main.yml tests/main.yml README.md
  printf "\nMODULE $2 created here: $MOD_LOC \n\n"
}


if [ "$#" -lt 1 ]; then
    echo "Usage: oyster [command] [parameters]"
	exit
fi

MODULE='x'
OYSTER_HOME=/Users/dporter/projects/sapa
while (( "$#" )); do
  case "$1" in
    create|c)
      COMMAND='create'
      STAGE="$2"
      MODULE="$3"
      shift 3
      createModule $STAGE $MODULE
      ;;
    * )
      COMMAND=$1
      ARGS="$@"
      ARGS="$ARGS --home $OYSTER_HOME"
      exp_dir_list=$(ls ${OYSTER_HOME}/experiments)
      exp_array=($(echo $exp_dir_list))
      if elementIn $COMMAND "${exp_array[@]}"; then
        python3 $OYSTER_HOME/utils/bin/interactive_exp.py --name $COMMAND --home $OYSTER_HOME --home_user $USER || echo "failed to successfully complete oyster session"
        echo "*** COMPLETED INTERACTIVE OYSTER SESSION *****"
        exit
      fi
      #for non interactive commands
      python3 $OYSTER_HOME/utils/bin/$COMMAND.py $ARGS || echo "> oyster $ARGS is not a valid command. Please be sure to follow API parameter rules"
      shift "$#"
      ;;

  esac
done

exit
